@inject IJSRuntime JS

@if (IsOpen)
{
    <div class="modal-overlay" @onclick="HandleOverlayClick">
        <div class="modal-content" @onclick:stopPropagation>
            <div class="modal-header">
                <h3>@Title</h3>
                <button class="close-button" @onclick="Close">×</button>
            </div>
            @ChildContent
        </div>
    </div>
}

@code {
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private async Task HandleOverlayClick() => await Close();

    protected virtual async Task Close()
    {
        await JS.InvokeVoidAsync("stopAlarmSound");
        await IsOpenChanged.InvokeAsync(false);
        await OnClose.InvokeAsync();
    }
}
