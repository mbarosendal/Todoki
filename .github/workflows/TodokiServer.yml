name: Build and deploy .NET Core application to Web App TodokiServer with API Management Service TodokiServerapi-TodokiServer

on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: TodokiServer
  AZURE_WEBAPP_PACKAGE_PATH: Todoki/Server/publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: MichaelR
  AZURE_APIM_SERVICENAME: TodokiServerapi
  AZURE_APIM_API_ID: TodokiServer
  AZURE_APIM_APPSERVICEURL: https://todokiserver.azurewebsites.net
  API_IMPORT_SPECIFICATION_PATH: Todoki/Server/publish/swagger.json
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: Todoki/Server

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}

      - name: Build
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build

      - name: Publish
        run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Generate Swagger JSON at runtime
        run: |
          # Run the app in the background
          dotnet ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/Todoki.Server.dll &
          APP_PID=$!
          # Wait a few seconds for the app to start
          sleep 5
          # Fetch the Swagger JSON
          curl -s http://localhost:5000/swagger/v1/swagger.json -o ${{ env.API_IMPORT_SPECIFICATION_PATH }}
          # Stop the app
          kill $APP_PID

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Login to Azure
        uses: azure/login@v2
        with:
          auth-type: SERVICE_PRINCIPAL
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_173F722D5A454A27AB9D161CCF762F6F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C444B57B51794C50B2F6789D025D681E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_2EF98F2B314C4FC5B75708B7B662E2AC }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Import API into Azure API Management
        run: |
          az apim api import \
            --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" \
            --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
            --service-name "${{ env.AZURE_APIM_SERVICENAME }}" \
            --api-id "${{ env.AZURE_APIM_API_ID }}" \
            --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" \
            --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" \
            --specification-format OpenApi \
            --subscription-required false

      - name: Logout
        run: az logout
